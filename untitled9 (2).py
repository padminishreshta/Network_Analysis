# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dZ7om_w4V1Y9Q0jR8LXz1zwm6dGW6K1v
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

data_df = pd.read_csv('/content/drive/MyDrive/Wednesday-14-02-2018_TrafficForML_CICFlowMeter.csv')
data_df.head()
data_df.count()
data_df['Label'].value_counts()

data_df.count()

cleanup_nums = {"Label":{"Benign": 2, "FTP-BruteForce": 4, "SSH-Bruteforce": 4}}
new_df = data_df.replace(cleanup_nums)
new_df

new_df.head(1000)

new_df.count()
new_df['Label'].value_counts()

new_df.dtypes

new_df = new_df.drop(['Timestamp','Fwd Pkt Len Max','Fwd Pkt Len Min','Fwd Pkt Len Mean','Fwd Pkt Len Std','Bwd Pkt Len Max','Bwd Pkt Len Min','Bwd Pkt Len Mean','Bwd Pkt Len Std','Flow IAT Mean','Flow IAT Std','Flow IAT Max','Flow IAT Min','Fwd IAT Tot','Fwd IAT Mean','Fwd IAT Std','Bwd IAT Tot','Bwd IAT Mean','Bwd IAT Std','Fwd IAT Max','Fwd IAT Min','Bwd IAT Max','Bwd IAT Min','Flow Byts/s','Flow Pkts/s','Pkt Len Min','Pkt Len Max','Pkt Len Mean','Pkt Len Std','Pkt Len Var','Idle Mean','Idle Max','Idle Std','Idle Min','Active Mean','Active Max','Active Min','Active Std','Init Fwd Win Byts','Init Bwd Win Byts','Fwd Act Data Pkts','Fwd Seg Size Min','Fwd Byts/b Avg','Subflow Fwd Pkts','Subflow Fwd Byts','Subflow Bwd Byts','Subflow Bwd Pkts','Bwd Blk Rate Avg','Fwd Blk Rate Avg','Fwd Seg Size Avg','Bwd Seg Size Avg','Bwd Byts/b Avg','Fwd Pkts/b Avg','Bwd Pkts/b Avg'],axis=1)

new_df

new_df.dtypes

data_df = new_df.select_dtypes(include ='float64')

data_df

new_df['Fwd Pkts/s'] = data_df['Fwd Pkts/s'].astype(int)
new_df['Bwd Pkts/s'] = data_df['Bwd Pkts/s'].astype(int)
new_df['Pkt Size Avg'] = data_df['Pkt Size Avg'].astype(int)

new_df.dtypes

for col in new_df.columns:
    pct_missing = np.mean(new_df[col].isnull())
    print('{} - {}%'.format(col, round(pct_missing*100)))

benign_df = new_df[new_df['Label']==2][0:10000]
malignant_df = new_df[new_df['Label']==4][0:10000]

#FTP-BruteForce_df = data_df[data_df['Label']==1][0:10000]

axes=benign_df.plot(kind='scatter', x='Protocol', y='Label', color='blue', label='Benign')
malignant_df.plot(kind='scatter', x='Protocol', y='Label', color='red', label='Benign', ax=axes)

#FTP-BruteForce_df.plot(kind='scatter', x='Protocol', y='Label', color='red', label='Benign', ax=axis)

new_df.columns
feature_df= new_df[['Dst Port', 'Protocol', 'Flow Duration', 'Tot Fwd Pkts', 'Tot Bwd Pkts',
       'TotLen Fwd Pkts', 'TotLen Bwd Pkts', 'Fwd PSH Flags', 'Bwd PSH Flags',
       'Fwd URG Flags', 'Bwd URG Flags', 'Fwd Header Len', 'Bwd Header Len',
       'Fwd Pkts/s', 'Bwd Pkts/s', 'FIN Flag Cnt', 'SYN Flag Cnt',
       'RST Flag Cnt', 'PSH Flag Cnt', 'ACK Flag Cnt', 'URG Flag Cnt',
       'CWE Flag Count', 'ECE Flag Cnt', 'Down/Up Ratio', 'Pkt Size Avg',
       ]]

#new_df 100rows and 34 col
#picked 33 col and all 100 rows
#indep var
X = np.asarray(feature_df)       
X[0:5]
#dep var
y = np.asarray(new_df['Label'])

y[0:5]

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X,y, test_size=0.2 , random_state=4)
(838860,33)
x_train.shape
(838860, 1)
y_train.shape
(209715, 33)
x_test.shape
(209715,1)
y_test.shape

from sklearn import svm

classifier = svm.SVC(kernel='linear', gamma='auto', C=2)
classifier.fit(x_train,y_train)

y_predict = classifier.predict(x_test)

